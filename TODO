Need To Do:
[] Rewrite sorting.jrny to be an actual tutorial
   - change green to pass in copy
   - s/builtin/builtins/
   - introduce data, before cases
   - instructions for Shift-Enter too late - switch Enter and Shift-Enter?
   - Object literals? Should come later, bring up data first
   - minus on lists implied by instructions
   - functional object update syntax is confusing (introduce later?)
   - symmetric syntax of for is confusing for fold (why does accumulator have to be where it is?)
   - data versus data type. consistent style / vocabulary.
   - use identifiers that are NOT the fields in cases
   - append as identifier
   - append needs to be described - what should it do?
   - interactions should come earlier
   - if they are to use random for pivot, should introduce list.get
[] Review should have better feedback when you don't fill in values
[] Background on code in reviews, highlight whole lines
[] Error Messages
   - empty args for for loop is bizarre
   - Constructor form in messages
   - field not found
   X unbound identifier is bad
   - different parse errors, and bad:
     (add1 5)
     add1(add1 7)
   - binops - bad args to prim is a terrible message
   - can we eliminate [[code]] (at least name, or something)
   - forgetting to close a paren and forgetting an end have BAD parse errors
   - cases with no value
   - random error message is bad
   - cases with missing pipes is bad
[] Well formedness
   - ERRORS DONT HAVE SRCLOCS when run with raco pyret.
   - multiple expressions on the same line (should at least be error on repl)
   X check as identifier
   X disallow `is` outside check
   - unbound identifiers (env with builtins needed)
[] UI jump when submitting work and starting reviews
[] syntax for check-exn
[] Refreshing when in reviews doesn't focus review tabs, and doesn't move
   editor to the right step
[] Tokens that aren't lexed are invisible! (like ?)
[] Clear for interactions
[] Review Interface / Design
   - Concrete rubric for reviews
   - confidence for review?
   - Concern: "same as the last guy" for comments. Maybe don't close tabs until all reviews done?
[] Highlighting on errors should be removed
[] <unprintable-expr> on pretty printer
[] Highlight the part you are reviewing
[] Highlight the part you are editing
[] Run button, title, and saving indicator should follow page down.
[] Plumb name of editor for sending to server, so parse errors aren't in program "run".
[] Progress is wierd - shouldn't fill when you are on the last step. Maybe use orange/blue?
[] Submit button got lost sometimes - highlight and delete?
[] repl loses newlines in echo
[] phrasing of values not equal in "is" (maybe "expected...")
[] Handling of unexpected racket errors (like unbound identifiers?)
[] Indentation bugs:
   - except(e):
   - fun f():
     o.{o:x} # not indented
     end

Want To Do:
[] Doc string on builtins
[] Standalone check-blocks (for many reasons, one is you can copy your own into repl for someone elses code)
   - Run this code on my code?
[] Indentation checker
[] Confused about whether run did anything (for simple examples)
[] Draw review blocks as code examples (so you can play with them and reset)
[] Printing vs evaling (ie, 2 == 3, run, should print false) the result of program

Not Necessary:
[] should print nothing? *note*: we do if you call "print" - it is javascript that skips
[] Should we stub out functions so they pass type checking? / Should run only be shown for definition stages.
[] Tab at beginning of line with text should jump to beginning of text
[] Think about narrow screens

All Feedback:
[] Colors on everything
[] Look at ben's state (reloaded, he was put at first step)
[] Check for termination:
    doubled-numbers = for map(elt from [1, 2, 3]):
      elt * 2
    end
    print(doubled-numbers)

    sum-of-numbers = for fold(sum from 0, elt from [1, 2, 3]):
      sum + elt
    end
    print(sum-of-numbers)

    odd-numbers = for filter(number from list.range(1,1000000)):
      number.modulo(2) == 0
    end
    print(odd-numbers)

[x] If error is already on the screen, don't scroll to it, when clicking on
   location information
[x] If all tests pass, show that. maybe highlight in editor, and just print
   summary in interactions
[x] check block order printing is reverse (within block it is correct)
[x] Exceptions that occur when computing the the values for comparison in check blocks
   - `is` could thunk stuff
[x] Disable repl prompt when running
[x] Paren matching in editor. end matching... would be cool
[x] string missing lessequal, greaterequal
[x] Submit needs lots of confirmation
[x] Reset needs confirmation (maybe put inside a menu)
[x] Paren at the beginning of the document needs to be a PARENSPACE
[x] tostring methods aren't preserved over method partial applications


Morning
[] Seeds for a single assignment
[] Add one of us as a teacher and be on the course dashboard
[] Order of reporting in check block output
[] Teach about cases (or some way of destructing lists)
[] Generate initial solutions for reviewing


Simple assignment test for summer students@
[x] Pick assignment
  - Quicksort
[] Error reporting
  [x] Static errors
  [] Runtime errors
[x] Check-results reporting
[x] Pretty printing
[x] Review instructions / make them look nicer
[x] Run button
[x] Save button
[x] Submit button in better location
[x] Reviews button de-uglify
[x] Tab closing for reviews (prioritize other reviews)
[x] Figure out proper above / below for widgets. Instructions should
    be above, but reviews should be below... An option
[x] Be able to add users to a course
[x] Have basic frontpage for users, showing them their assignments

Deployment & Performance;
[] More complete solution for signup/adding users
[] Report abuse for students on cross-feedback
[x] Remove every hardcoded localhost
[] Encryption
[] Caching/torture testing for performance
[] Get names for users? (or find something other than their email for Git
   commits in the name field)
[] Figure out how pathrefs should be created in the database... so
   that caching can work (right now, we create path refs many times)
[] Reviews need timestamps (any blob stuff needs timestamp)

Grading/Teacher view
[] How will we show reviews that students did for one another in the grading
   interface?
[] Don't try to save versions in teacher review mode when switching versions

Scribble:
[] Get instructions in flow with the assignment parts
[] Choosing identifier names?
[] To turn on/off or # reviews by part, change args[reviews] to be a
   dictionary of part->reviews count
[] Indicate reviewability of activity instances in markup
  - Indicate this by creating and passing args

UI/JS:
[] Prettier test output
[] Highlight error messages in output
[] Make CodeMirror behave with respect to zooming
[] Do something with scrolling at the bottom of the REPL
[] Pretty-printing in the REPL
[] Width of editor
[] Clearing REPL output
[] Auto-save:
  - blob stores the most recent version (if any)
  - on reload, the blob is authoritative if its version matches the path's most recent version
  - otherwise, the blob is discarded
[] Extend code-assignment builder to do versioning
  - and save intermediate code!
[] Copy to beginning of the file even with atomic
[] Focus interactions when things run

Curricular:
[] Sensible front-end on finding that the assigned reviews are completely
   missing
[] Group by user_id and take the first by time in assign_reviews

Refactoring
[] data-parts needs to become data-steps
[] Refactor save/submit/lookupResource to share more
[] Consistent on("event") vs .event()


[x] Refactor server_tests.js into draw and ui components
[x] Write code-assignment builder in ct.js that uses these
[x] See the reviews you got
[x] Design/write code-assignment scribble
[x] Hook up frontend to call submission on each part
[] Test finishing assignments --- something odd with {done:true} that may just
   be browser refresh problem
[x] Test submission and subsequent review lookup

[?] Refactor parts/steps to be a list of more descriptive objects

[x] Marks for function activities
  - track beginning/end of header/check blocks
[x] Locks for control of Whalesong printing
[x] Have check mode just return the data structure of check results and
   let the context figure it out (cmdline.rkt, repl.js, etc.), rather
   than printing by itself

[x] Column on submitted for how many have reviewed

[x] Libraries
[x] Versions
[x] Reviews
[~] Design recipe step

[x] Scrollability behavior of reviews pane
